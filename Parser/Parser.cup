/* Codigo de usuario */

// importaciones y paquetes

package com.peter.typesecure.parser;

import com.peter.typesecure.lexer.Lexer;
import java_cup.runtime.Symbol;


// Codigo para el parser, variables, metodos

parser code {:

    public Parser(Lexer lexer) {
        super(lexer);
    }

    //Metodo llamado automaticamente al encontrar error sintanctico


    public void syntax_error(Symbol s){

    String lexema = s.value.toString();
    int fila = s.right;
    int columna = s.left;
    
    System.out.println("Error Sintactico hallado");
    System.out.println("Lexema " + lexema + " linea"  + fila + " columna " + columna);

    }

    //Metodo llamado cuando no se puede recuperar de un error
    
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        
    String lexema = s.value.toString();
    int fila = s.right;
    int columna = s.left;
    
    System.out.println("Error Sintactico hallado PANIC MODE");
    System.out.println("Lexema " + lexema + " linea"  + fila + " columna " + columna);
        
    }

:}

                                                    // CODIGO PARA LAS ACCIONES GRAMATICALES

            /* Declaraciones de terminales y no terminales */

    /* TERMINALES */

/* NUMEROS */

terminal NUMBER;

terminal BIGINT;

/* ID */
terminal ID;

/* TEXTO */
terminal TEXTO;

/* BOOLEANOS */
terminal TRUE,FALSE;

/* TIPOS DE DATOS */
terminal RNUMBER,RBIGINT,RSTRING,RBOOLEAN,RVOID,RCONST,RLET;

/* SIMBOLOS ARITMETICOS */

terminal MAS,MENOS,MULTIPLICACION,MOD,DIVISION,UMENOS;
terminal PARENTESIS_ABIERTO,PARENTESIS_CERRADO;
terminal INCREMENTO,DECREMENTO;

/* ASIGNACION */
terminal ASIGNACION;

/* OPERADORES LOGICOS */
terminal AND, OR, NOT;

/* OPERADORES RELACIONALES */
terminal MENOR_QUE, MENOR_IGUAL, MAYOR_QUE, MAYOR_IGUAL, COMPARACION, DISTINTO;

/* SIMBOLOS DE PUNTUACION*/

terminal PUNTO, COMA, DOS_PUNTOS, PUNTO_COMA;

/* SIMBOLOS DE AGRUPACION */

terminal CORCHETE_ABIERTO, CORCHETE_CERRADO;

/* FUNCIONES */

terminal FUNCTION;

//CONVERSION DE TIPOS
terminal FNUMBER, FBIGINT, FBOOLEAN, FSTRING;

//ACCESO PROPIEDAD
terminal LENGTH, CHARAT;

//MAYUSCULA, MINUSCULA
terminal TOLOWERCASE, TOUPPERCASE;

//ACCIONES VARIAS
terminal CONCAT, CONSOLE, LOG;

//SENTENCIAS DE CONTROL

terminal IF, ELSE, FOR, WHILE, DO, BREAK, CONTINUE, RETURN;

//VALORES ESTATICOS 
terminal MATH, E, PI, SQRT2, ABS, CEIL, COS, SIN, TAN, EXP, FLOOR, POW, SQRT, RANDOM, PRINTAST, GETSYMBOLTABLE;

/* NO TERMINALES */

//no terminal que da inicio a todo
non terminal inicio;

//no terminal que contiene el lenguaje TypeSecure
non terminal ts;

//opciones a ejecutar
non terminal instrucciones, opciones_instrucciones;

//instruccion
non terminal instruccion;

//declaracion de variable
non terminal declaracion_variable, tipo_acceso_variable, id_valor_variable_lista, id_valor_variable;
non terminal tipo_dato_variable, variable_valor;

//asignacion
non terminal asignacion;

//operaciones matematicas
non terminal operaciones_matematicas,funciones_numericas_estaticas;

//incremento decremento
non terminal incremento, decremento;

//funcion incremento decremento
non terminal funcion_incremento_decremento;

//operaciones relacionales
non terminal operaciones_relacionales;

//operaciones logicas
non terminal operaciones_logicas;

        /* FUNCIONES */

//funcion length
non terminal funcion_length;

//funcion number
non terminal funcion_number;

//funcion biging
non terminal funcion_bigint;

//funcion boolean
non terminal funcion_boolean;

//funcion string
non terminal funcion_string;

//funcion charAt
non terminal funcion_char_at;

//funcion toLowerCase
non terminal funcion_to_lower_case;

//funcion toUpperCase
non terminal funcion_to_upper_case;

//funcion concat
non terminal variables_string, funcion_concat;

//funcion console log
non terminal funcion_console_log,lista_instrucciones_console;

//declaracion de funciones
non terminal declaracion_funcion, parametro_funcion_declaracion,parametros_funcion_declaracion, instrucciones_funcion;
non terminal instrucciones_funciones_sin_return,opciones_instrucciones_sin_return;

//funcion return
non terminal funcion_return;

//funcion if
non terminal funcion_if, funcion_else, funcion_else_if, lista_else_if, opciones_if;


//llamada de funciones
non terminal llamada_funcion_asignacion, parametros_funcion_asignacion, llamada_funcion_normal;

//instruccion break

non terminal instruccion_break;

//instruccion continue

non terminal instruccion_continue;

// PRECEDENCIA
precedence left AND;
precedence left OR;
precedence left NOT;
precedence left COMPARACION, MENOR_QUE, MAYOR_QUE,MENOR_IGUAL,MAYOR_IGUAL;
precedence left MAS,MENOS,MOD;
precedence left MULTIPLICACION,DIVISION;
precedence left PARENTESIS_ABIERTO,PARENTESIS_CERRADO;
precedence right UMENOS; 

start with inicio;

/* Reglas sintacticas */
 

// Da inicio a las transiciones

inicio ::= ts {: System.out.println("Doc ok"); :}
       ;

ts ::= instrucciones
   ;

instrucciones ::= instrucciones opciones_instrucciones
                | opciones_instrucciones
               ;

opciones_instrucciones ::= declaracion_variable
                        |  asignacion
                        |  funcion_console_log
                        |  declaracion_funcion
                        |  llamada_funcion_normal
                        |  opciones_if
                        |  funcion_return
                        |  instruccion_break
                        |  instruccion_continue
                        |  funcion_incremento_decremento
                        ;

opciones_instrucciones_sin_return ::= 
                        declaracion_variable
                        |  asignacion
                        |  funcion_console_log
                        |  declaracion_funcion
                        |  llamada_funcion_normal
                        |  opciones_if
                        |  instruccion_break
                        |  instruccion_continue
                        ;



asignacion ::= ID ASIGNACION variable_valor PUNTO_COMA
            ;

declaracion_variable ::= tipo_acceso_variable id_valor_variable_lista PUNTO_COMA
                      ;

id_valor_variable_lista ::=  id_valor_variable_lista COMA id_valor_variable
                         |   id_valor_variable
                         ;

id_valor_variable ::= ID:id DOS_PUNTOS tipo_dato_variable:tipoDato ASIGNACION variable_valor:valor {: System.out.println(id + " " + tipoDato + " " + valor); :}
                    | ID:id ASIGNACION variable_valor:valor {: System.out.println(id + " " + valor); :}
                    | ID:id DOS_PUNTOS tipo_dato_variable:tipoDato {: System.out.println(id + " " + tipoDato + " " + " undefined"); :}
                   ;



tipo_acceso_variable ::= RCONST:a {: RESULT = a; :} 
                       | RLET:a   {: RESULT = a; :} 
                      ;

tipo_dato_variable ::= RNUMBER:a {: RESULT = a; :} 
                    |  RBIGINT:a {: RESULT = a; :}
                    |  RSTRING:a {: RESULT = a; :}
                    |  RBOOLEAN:a {: RESULT = a; :}
                    ;

variable_valor ::= instruccion
                ;

instruccion ::=  operaciones_matematicas:a 
                | operaciones_logicas 
                | funcion_boolean 
                | funcion_string 
                | funcion_char_at
                | funcion_to_lower_case
                | funcion_to_upper_case
                | funcion_concat
                | llamada_funcion_asignacion 
                | incremento
                | decremento
                ;


operaciones_matematicas ::= MENOS operaciones_matematicas:a {:      :}%prec UMENOS 
                        | MAS operaciones_matematicas:a {:      :}%prec UMENOS 
                        | operaciones_matematicas:a MAS operaciones_matematicas:b 
                        | operaciones_matematicas:a MENOS operaciones_matematicas:b 
                        | operaciones_matematicas:a MULTIPLICACION operaciones_matematicas:b 
                        | operaciones_matematicas:a DIVISION operaciones_matematicas:b 
                        | operaciones_matematicas:a MOD operaciones_matematicas:b 
                        | PARENTESIS_ABIERTO operaciones_matematicas:a PARENTESIS_CERRADO 
                        | funcion_number
                        | funcion_bigint
                        | funcion_length
                        | funciones_numericas_estaticas
                        | NUMBER:a 
                        | BIGINT:a 
                        | ID:a    
                        | TEXTO:a 
                        ;

funciones_numericas_estaticas ::= MATH PUNTO ABS PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO CEIL PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO COS PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO SIN PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO TAN PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO EXP PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO FLOOR PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO POW PARENTESIS_ABIERTO operaciones_matematicas COMA operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO SQRT PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               |  MATH PUNTO RANDOM PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                               | MATH PUNTO E
                               | MATH PUNTO PI
                               | MATH PUNTO SQRT2
                              ;

incremento ::= ID:a INCREMENTO
           ;

decremento ::= ID:a DECREMENTO
            ;

funcion_incremento_decremento ::= ID INCREMENTO PUNTO_COMA
                               |  ID DECREMENTO PUNTO_COMA
                       ;

operaciones_relacionales ::= operaciones_matematicas MAYOR_QUE operaciones_matematicas
                           | operaciones_matematicas MAYOR_IGUAL operaciones_matematicas
                           | operaciones_matematicas MENOR_QUE operaciones_matematicas
                           | operaciones_matematicas MENOR_IGUAL operaciones_matematicas
                           | operaciones_matematicas COMPARACION operaciones_matematicas
                           | operaciones_matematicas DISTINTO operaciones_matematicas

                           | TRUE COMPARACION TRUE
                           | TRUE COMPARACION FALSE
                           | FALSE COMPARACION TRUE
                           | FALSE COMPARACION FALSE
                           | operaciones_matematicas COMPARACION TRUE
                           | TRUE COMPARACION operaciones_matematicas
                           | operaciones_matematicas COMPARACION FALSE
                           | FALSE COMPARACION operaciones_matematicas

                           | TRUE DISTINTO TRUE
                           | TRUE DISTINTO FALSE
                           | FALSE DISTINTO TRUE
                           | FALSE DISTINTO FALSE
                           | operaciones_matematicas DISTINTO TRUE
                           | TRUE DISTINTO operaciones_matematicas
                           | operaciones_matematicas DISTINTO FALSE
                           | FALSE DISTINTO operaciones_matematicas
                       
                           | TRUE {: RESULT = "true"; :}
                           | FALSE {: RESULT = "false"; :}

                           | funcion_boolean COMPARACION TRUE
                           | funcion_boolean COMPARACION FALSE
                           | TRUE COMPARACION funcion_boolean
                           | FALSE COMPARACION funcion_boolean
                           | funcion_boolean DISTINTO TRUE
                           | funcion_boolean DISTINTO FALSE
                           | TRUE DISTINTO funcion_boolean
                           | FALSE DISTINTO funcion_boolean
                           | funcion_boolean COMPARACION funcion_boolean
                           | funcion_boolean DISTINTO funcion_boolean

                           | funcion_string COMPARACION funcion_string
                           | funcion_string DISTINTO funcion_string

                           | funcion_string COMPARACION operaciones_matematicas
                           | funcion_string DISTINTO operaciones_matematicas

                           | operaciones_matematicas COMPARACION funcion_string
                           | operaciones_matematicas DISTINTO funcion_string


                           | PARENTESIS_ABIERTO operaciones_relacionales PARENTESIS_CERRADO
                          ;  

operaciones_logicas ::= operaciones_logicas AND operaciones_logicas
                    | operaciones_logicas OR operaciones_logicas
                    | NOT operaciones_logicas
                    | PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                    | operaciones_relacionales 
                    ;

funcion_length ::= TEXTO PUNTO LENGTH
                |  ID PUNTO LENGTH
                |  variables_string PUNTO LENGTH
                ;


funcion_number ::= FNUMBER PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                |  FNUMBER PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                |  FNUMBER PARENTESIS_ABIERTO TEXTO PARENTESIS_CERRADO
                ;

funcion_bigint  ::= FBIGINT PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                |   FBIGINT PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                |   FBIGINT PARENTESIS_ABIERTO TEXTO PARENTESIS_CERRADO
                ;


funcion_boolean  ::= FBOOLEAN PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                 |   FBOOLEAN PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                 |   FBOOLEAN PARENTESIS_ABIERTO TEXTO PARENTESIS_CERRADO
                 ;


funcion_string  ::= FSTRING PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                 |  FSTRING PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                 |  FSTRING PARENTESIS_ABIERTO TEXTO PARENTESIS_CERRADO
                 ;

funcion_char_at ::= ID PUNTO CHARAT PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                |   TEXTO PUNTO CHARAT PARENTESIS_ABIERTO operaciones_matematicas PARENTESIS_CERRADO
                ;


funcion_concat ::= variables_string PUNTO CONCAT PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO  
                |  TEXTO PUNTO CONCAT PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO  
                |  ID PUNTO CONCAT PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO  
                ;

variables_string ::= funcion_string
                 |  funcion_char_at   
                 |  funcion_to_lower_case
                 |  funcion_to_upper_case
                 |  funcion_concat
                 |  llamada_funcion_asignacion
                 ;


funcion_to_lower_case ::= ID PUNTO TOLOWERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       |  TEXTO PUNTO TOLOWERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       |  variables_string PUNTO TOLOWERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       ;

funcion_to_upper_case ::= ID PUNTO TOUPPERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       |  TEXTO PUNTO TOUPPERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       |  variables_string PUNTO TOUPPERCASE PARENTESIS_ABIERTO PARENTESIS_CERRADO
                       ;

funcion_console_log ::= CONSOLE PUNTO LOG PARENTESIS_ABIERTO lista_instrucciones_console:a PARENTESIS_CERRADO PUNTO_COMA {: System.out.println(a); :}
            ;

lista_instrucciones_console ::= lista_instrucciones_console COMA instruccion:a {: RESULT = a; :}
                             |  instruccion:a {: RESULT = a; :}
                             ;

 

declaracion_funcion ::= 

 FUNCTION ID PARENTESIS_ABIERTO PARENTESIS_CERRADO DOS_PUNTOS RVOID CORCHETE_ABIERTO instrucciones_funciones_sin_return CORCHETE_CERRADO

|FUNCTION ID PARENTESIS_ABIERTO parametros_funcion_declaracion PARENTESIS_CERRADO DOS_PUNTOS RVOID CORCHETE_ABIERTO instrucciones_funciones_sin_return CORCHETE_CERRADO

|FUNCTION ID PARENTESIS_ABIERTO PARENTESIS_CERRADO CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO

|FUNCTION ID PARENTESIS_ABIERTO parametros_funcion_declaracion PARENTESIS_CERRADO CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO

|FUNCTION ID PARENTESIS_ABIERTO PARENTESIS_CERRADO DOS_PUNTOS tipo_dato_variable CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO

|FUNCTION ID PARENTESIS_ABIERTO parametros_funcion_declaracion PARENTESIS_CERRADO  DOS_PUNTOS tipo_dato_variable  CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO
        
                    ;


instrucciones_funciones_sin_return ::= instrucciones_funciones_sin_return opciones_instrucciones_sin_return 
                                    | opciones_instrucciones_sin_return
                                    ;


instrucciones_funcion ::= instrucciones
                       |
                       ;

parametros_funcion_declaracion ::= parametros_funcion_declaracion COMA parametro_funcion_declaracion
                    |  parametro_funcion_declaracion
                    ;

parametro_funcion_declaracion ::= ID DOS_PUNTOS tipo_dato_variable
                                ;


funcion_return ::= RETURN instruccion PUNTO_COMA
                | RETURN PUNTO_COMA
                ;

llamada_funcion_asignacion ::= ID PARENTESIS_ABIERTO PARENTESIS_CERRADO 
                            |  ID PARENTESIS_ABIERTO parametros_funcion_asignacion PARENTESIS_CERRADO 
                            ;

parametros_funcion_asignacion ::= parametros_funcion_asignacion COMA instruccion
                               |  instruccion
                               ;



llamada_funcion_normal ::= ID PARENTESIS_ABIERTO PARENTESIS_CERRADO PUNTO_COMA
                        |  ID PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO PUNTO_COMA
                        ;

funcion_if ::= IF PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO
            ;

funcion_else ::= ELSE CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO
              ;  


funcion_else_if ::= ELSE IF PARENTESIS_ABIERTO instruccion PARENTESIS_CERRADO CORCHETE_ABIERTO instrucciones_funcion CORCHETE_CERRADO
                ;

lista_else_if ::= lista_else_if funcion_else_if
                | funcion_else_if
                ;

opciones_if ::=   funcion_if
                | funcion_if funcion_else
                | funcion_if lista_else_if funcion_else
                | funcion_if lista_else_if
                ;


instruccion_break ::= BREAK PUNTO_COMA
                  ;


instruccion_continue ::= CONTINUE PUNTO_COMA
                     ;


