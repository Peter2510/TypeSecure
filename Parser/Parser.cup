/* Codigo de usuario */

// importaciones y paquetes

package com.peter.typesecure.parser;

import com.peter.typesecure.lexer.Lexer;
import java_cup.runtime.Symbol;


// Codigo para el parser, variables, metodos

parser code {:

    public Parser(Lexer lexer) {
        super(lexer);
    }

    //Metodo llamado automaticamente al encontrar error sintanctico


    public void syntax_error(Symbol s){

    String lexema = s.value.toString();
    int fila = s.right;
    int columna = s.left;
    
    System.out.println("Error Sintactico hallado");
    System.out.println("Lexema " + lexema + " linea"  + fila + " columna " + columna);

    }

    //Metodo llamado cuando no se puede recuperar de un error
    
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        
    String lexema = s.value.toString();
    int fila = s.right;
    int columna = s.left;
    
    System.out.println("Error Sintactico hallado PANIC MODE");
    System.out.println("Lexema " + lexema + " linea"  + fila + " columna " + columna);
        
    }

:}

                                                    // CODIGO PARA LAS ACCIONES GRAMATICALES

            /* Declaraciones de terminales y no terminales */

    /* TERMINALES */

/* NUMEROS */

terminal NUMBER;

terminal BIGINT;

/* ID */
terminal ID;

/* TEXTO */
terminal TEXTO;

/* BOOLEANOS */
terminal TRUE,FALSE;

/* TIPOS DE DATOS */
terminal RNUMBER,RBIGINT,RSTRING,RBOOLEAN,RVOID,RCONST,RLET;

/* SIMBOLOS ARITMETICOS */

terminal MAS,MENOS,MULTIPLICACION,MOD,DIVISION,UMENOS;
terminal PARENTESIS_ABIERTO,PARENTESIS_CERRADO;
terminal INCREMENTO,DECREMENTO;

/* ASIGNACION */
terminal ASIGNACION;

/* OPERADORES LOGICOS */
terminal AND, OR, NOT;

/* OPERADORES RELACIONALES */
terminal MENOR_QUE, MENOR_IGUAL, MAYOR_QUE, MAYOR_IGUAL, COMPARACION, DISTINTO;

/* SIMBOLOS DE PUNTUACION*/

terminal PUNTO, COMA, DOS_PUNTOS, PUNTO_COMA;

/* SIMBOLOS DE AGRUPACION */

terminal CORCHETE_ABIERTO, CORCHETE_CERRADO;

/* FUNCIONES */

terminal FUNCTION;

//CONVERSION DE TIPOS
terminal FNUMBER, FBIGINT, FBOOLEAN, FSTRING;

//ACCESO PROPIEDAD
terminal LENGTH, CHARAT;

//MAYUSCULA, MINUSCULA
terminal TOLOWERCASE, TOUPPERCASE;

//ACCIONES VARIAS
terminal CONCAT, CONSOLELOG;

//SENTENCIAS DE CONTROL

terminal IF, ELSE, FOR, WHILE, DO, BREAK, CONTINUE, RETURN;

//VALORES ESTATICOS 
terminal MATHE, MATHPI, MATHSQRT2, MATHABS, MATHCEIL, MATHCCOS, MATHSIN, MATHTAN, MATHEXP, MATHFLOOR, MATHPOW, MATHSQRT, MATHRANDOM, PRINTAST, GETSYMBOLTABLE;

/* NO TERMINALES */

//no terminal que da inicio a todo
non terminal inicio;

//no terminal que contiene el lenguaje TypeSecure
non terminal ts;

//declaracion de variable
non terminal declaracion_variables,declaracion_variable, tipo_acceso_variable, id_valor_variable_lista, id_valor_variable;
non terminal tipo_dato_variable, variable_valor;

//operaciones matematicas
non terminal operaciones_matematicas;

//acciones dentro de parentesis o corchetes
non terminal dentro_bloque;

//incremento decremento
non terminal incremento, decremento;

//operaciones relacionales
non terminal operaciones_relacionales;

//operaciones logicas
non terminal operaciones_logicas,opcion_operacion_logica;

//concatenacion
non terminal concatenacion;

// PRECEDENCIA
precedence left AND;
precedence left OR;
precedence left NOT;
precedence left COMPARACION, NOT, MENOR_QUE, MAYOR_QUE,MENOR_IGUAL,MAYOR_IGUAL;
precedence left MAS,MENOS,MOD;
precedence left MULTIPLICACION,DIVISION;
precedence left PARENTESIS_ABIERTO,PARENTESIS_CERRADO;
precedence right UMENOS; 

start with inicio;

/* Reglas sintacticas */
 

// Da inicio a las transiciones

inicio ::= ts {: System.out.println("Doc ok"); :}
       ;


ts ::= declaracion_variables
   ;

dentro_bloque ::= incremento
                | decremento
                ;

declaracion_variables ::= declaracion_variables declaracion_variable 
                        | declaracion_variable
                       ;

declaracion_variable ::= tipo_acceso_variable id_valor_variable_lista PUNTO_COMA
                      ;

id_valor_variable_lista ::=  id_valor_variable_lista COMA id_valor_variable
                         |   id_valor_variable
                         ;

id_valor_variable ::= ID:id DOS_PUNTOS tipo_dato_variable:tipoDato ASIGNACION variable_valor:valor {: System.out.println(id + " " + tipoDato + " " + valor); :}
                    | ID:id ASIGNACION variable_valor:valor {: System.out.println(id + " " + valor); :}
                    | ID:id DOS_PUNTOS tipo_dato_variable:tipoDato {: System.out.println(id + " " + tipoDato + " " + " undefined"); :}
                   ;



tipo_acceso_variable ::= RCONST:a {: RESULT = a; :} 
                       | RLET:a   {: RESULT = a; :} 
                      ;

tipo_dato_variable ::= RNUMBER:a {: RESULT = a; :} 
                    |  RBIGINT:a {: RESULT = a; :}
                    |  RSTRING:a {: RESULT = a; :}
                    |  RBOOLEAN:a {: RESULT = a; :}
                    |  RVOID:a {: RESULT = a; :}
                    ;

variable_valor ::= 
                  operaciones_matematicas:a {: RESULT = a; :}
                | TEXTO:a   {: RESULT = a; :}
                | operaciones_logicas {: RESULT = "operacion logica"; :}
                | concatenacion 
                ;


operaciones_matematicas ::= //MENOS operaciones_matematicas:a {: RESULT=a*-1;      :}%prec UMENOS 
                         operaciones_matematicas:a MAS operaciones_matematicas:b
                        | operaciones_matematicas:a MENOS operaciones_matematicas:b
                        | operaciones_matematicas:a MULTIPLICACION operaciones_matematicas:b
                        | operaciones_matematicas:a DIVISION operaciones_matematicas:b
                        | operaciones_matematicas:a MOD operaciones_matematicas:b
                        | PARENTESIS_ABIERTO operaciones_matematicas:a PARENTESIS_CERRADO {: RESULT = a; :}
                        | NUMBER:a {: RESULT = a; :}
                        | BIGINT:a {: RESULT = a; :}
                        | ID:a         
                        ;

incremento ::= ID:a MAS MAS
           ;

decremento ::= ID:a MENOS MENOS
            ;

operaciones_relacionales ::= operaciones_matematicas MAYOR_QUE operaciones_matematicas
                           | operaciones_matematicas MAYOR_IGUAL operaciones_matematicas
                           | operaciones_matematicas MENOR_QUE operaciones_matematicas
                           | operaciones_matematicas MENOR_IGUAL operaciones_matematicas
                           | operaciones_matematicas COMPARACION operaciones_matematicas
                           | operaciones_matematicas DISTINTO operaciones_matematicas
                           | TRUE COMPARACION TRUE
                           | TRUE COMPARACION FALSE
                           | FALSE COMPARACION TRUE
                           | FALSE COMPARACION FALSE
                           | operaciones_matematicas COMPARACION TRUE
                           | TRUE COMPARACION operaciones_matematicas
                           | operaciones_matematicas COMPARACION FALSE
                           | FALSE COMPARACION operaciones_matematicas
                           | TRUE DISTINTO TRUE
                           | TRUE DISTINTO FALSE
                           | FALSE DISTINTO TRUE
                           | FALSE DISTINTO FALSE
                           | operaciones_matematicas DISTINTO TRUE
                           | TRUE DISTINTO operaciones_matematicas
                           | operaciones_matematicas DISTINTO FALSE
                           | FALSE DISTINTO operaciones_matematicas
                           | PARENTESIS_ABIERTO operaciones_relacionales PARENTESIS_CERRADO
                           | TRUE {: RESULT = "true"; :}
                           | FALSE {: RESULT = "false"; :}
                          ;  

operaciones_logicas ::= operaciones_logicas AND operaciones_logicas
                    | operaciones_logicas OR operaciones_logicas
                    | NOT operaciones_logicas
                    | PARENTESIS_ABIERTO operaciones_logicas PARENTESIS_CERRADO
                    | operaciones_relacionales 
                    ;

concatenacion ::= TEXTO MAS TEXTO
                | TEXTO MAS operaciones_logicas
                | TEXTO MAS operaciones_matematicas
                | operaciones_logicas MAS TEXTO 
                | TEXTO MAS operaciones_matematicas
               ;                   
                

                